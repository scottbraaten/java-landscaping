/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Component;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Scott Braaten
 */
public class BraatenLandscapingGUI extends javax.swing.JFrame {

    // class level references
    private final double GRASS_PER_SQFT = 5.00;
    private final double GRAVEL_PER_SQFT = 2.00;

    DefaultListModel<Customer> customerList = new DefaultListModel();

    /**
     * Creates new form BraatenLandscapingGUI
     */
    public BraatenLandscapingGUI() {
        initComponents();

        // load customers on init
        loadCustomers();

        // center the form
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgYardType = new javax.swing.ButtonGroup();
        tabMain = new javax.swing.JTabbedPane();
        pnlWelcome = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblGrass = new javax.swing.JLabel();
        lblGravel = new javax.swing.JLabel();
        rdoGrass = new javax.swing.JRadioButton();
        rdoGravel = new javax.swing.JRadioButton();
        lblPhoto = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        pnlInformation = new javax.swing.JPanel();
        lblInformationTitle = new javax.swing.JLabel();
        lblSubtitle = new javax.swing.JLabel();
        lblPersonal = new javax.swing.JLabel();
        lblYardInfo = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblLength = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        lblWidth = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        lblOrderTitle = new javax.swing.JLabel();
        scrOrderContainer = new javax.swing.JScrollPane();
        txaOrderInfo = new javax.swing.JTextArea();
        btnSubmitOrder = new javax.swing.JButton();
        pnlCustomerList = new javax.swing.JPanel();
        lblCustomerListTitle = new javax.swing.JLabel();
        lblCutomerList = new javax.swing.JLabel();
        lblCustomerDetails = new javax.swing.JLabel();
        scrCustomerListContainer = new javax.swing.JScrollPane();
        lstCustomers = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaCustomerInfo = new javax.swing.JTextArea();
        btnLoad = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        mnbMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        mniSubmitOrder = new javax.swing.JMenuItem();
        mniReset = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        tabMain.setMaximumSize(new java.awt.Dimension(1000, 660));
        tabMain.setMinimumSize(new java.awt.Dimension(1000, 660));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Scott Braaten Landscapes");

        lblDesc.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblDesc.setText("Whether it's grass or gravel, we've got you covered!");
        lblDesc.setMaximumSize(new java.awt.Dimension(555, 32));
        lblDesc.setMinimumSize(new java.awt.Dimension(555, 32));

        lblGrass.setText("$5/sqft");

        lblGravel.setText("$2/sqft");

        btgYardType.add(rdoGrass);
        rdoGrass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdoGrass.setText("Grass");
        rdoGrass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGrassActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGravel);
        rdoGravel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdoGravel.setText("Gravel");
        rdoGravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGravelActionPerformed(evt);
            }
        });

        lblPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dirt.jpg"))); // NOI18N

        btnNext.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setMinimumSize(new java.awt.Dimension(80, 40));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblGravel)
                        .addComponent(lblGrass))
                    .addComponent(rdoGrass, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rdoGravel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(142, 142, 142)
                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(135, 135, 135))
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(lblTitle))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(lblDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(36, 36, 36)
                .addComponent(lblDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                                .addComponent(rdoGrass)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGrass)
                                .addGap(138, 138, 138)
                                .addComponent(rdoGravel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGravel)
                                .addGap(175, 175, 175))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(195, 195, 195))))))
        );

        tabMain.addTab("Welcome", pnlWelcome);

        pnlInformation.setMaximumSize(new java.awt.Dimension(1000, 660));
        pnlInformation.setMinimumSize(new java.awt.Dimension(1000, 660));
        pnlInformation.setPreferredSize(new java.awt.Dimension(1000, 660));

        lblInformationTitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblInformationTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInformationTitle.setText("Scott Braaten Landscapes");

        lblSubtitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSubtitle.setText("Fill out this information so that you can get your landscape order placed!");

        lblPersonal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblPersonal.setText("Personal Info");

        lblYardInfo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblYardInfo.setText("Yard Info");

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblName.setText("Name:");

        txtName.setNextFocusableComponent(txtAddress);

        lblAddress.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAddress.setText("Address:");

        txtAddress.setNextFocusableComponent(txtLength);

        lblLength.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLength.setText("Length (ft):");

        txtLength.setNextFocusableComponent(txtWidth);

        lblWidth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblWidth.setText("Width (ft):");

        txtWidth.setNextFocusableComponent(btnCalculate);

        btnCalculate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblOrderTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblOrderTitle.setText("Your Order");

        txaOrderInfo.setColumns(20);
        txaOrderInfo.setRows(5);
        txaOrderInfo.setName("txaOrderInfo"); // NOI18N
        scrOrderContainer.setViewportView(txaOrderInfo);

        btnSubmitOrder.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(lblPersonal))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(btnCalculate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(lblOrderTitle)
                        .addGap(221, 221, 221))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                        .addComponent(btnSubmitOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187))))
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(lblSubtitle))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddress)
                                    .addComponent(lblName))
                                .addGap(18, 18, 18)
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(lblLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(lblWidth)
                                .addGap(18, 18, 18)
                                .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(254, 254, 254)
                                .addComponent(lblYardInfo)))
                        .addGap(138, 138, 138)
                        .addComponent(scrOrderContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(148, Short.MAX_VALUE))
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(lblInformationTitle)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInformationTitle)
                .addGap(16, 16, 16)
                .addComponent(lblSubtitle)
                .addGap(64, 64, 64)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblOrderTitle)
                        .addGap(18, 18, 18)
                        .addComponent(scrOrderContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 34, Short.MAX_VALUE))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblPersonal)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addComponent(lblYardInfo)
                        .addGap(28, 28, 28)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWidth)
                            .addComponent(lblLength)
                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)))
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmitOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        tabMain.addTab("Information", pnlInformation);

        pnlCustomerList.setMaximumSize(new java.awt.Dimension(1000, 660));
        pnlCustomerList.setPreferredSize(new java.awt.Dimension(1000, 660));

        lblCustomerListTitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblCustomerListTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCustomerListTitle.setText("Scott Braaten Landscapes");

        lblCutomerList.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCutomerList.setText("Customer List");

        lblCustomerDetails.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCustomerDetails.setText("Customer Details");

        lstCustomers.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lstCustomers.setModel(customerList);
        lstCustomers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomersValueChanged(evt);
            }
        });
        scrCustomerListContainer.setViewportView(lstCustomers);

        txaCustomerInfo.setColumns(20);
        txaCustomerInfo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txaCustomerInfo.setRows(5);
        jScrollPane1.setViewportView(txaCustomerInfo);

        btnLoad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLoad.setText("Load List");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDelete.setText("Delete Customer");
        btnDelete.setToolTipText("");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCustomerListLayout = new javax.swing.GroupLayout(pnlCustomerList);
        pnlCustomerList.setLayout(pnlCustomerListLayout);
        pnlCustomerListLayout.setHorizontalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCustomerListLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(lblCutomerList))
                    .addGroup(pnlCustomerListLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(scrCustomerListContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCustomerListLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerListLayout.createSequentialGroup()
                        .addComponent(lblCustomerDetails)
                        .addGap(233, 233, 233))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerListLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerListLayout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(237, 237, 237))))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(lblCustomerListTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCustomerListLayout.setVerticalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCustomerListTitle)
                .addGap(52, 52, 52)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCutomerList)
                    .addComponent(lblCustomerDetails))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrCustomerListContainer)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        tabMain.addTab("Customer List", pnlCustomerList);

        mnuFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        mnbMain.add(mnuFile);

        mnuOrder.setText("Order");

        mniSubmitOrder.setText("Submit Order");
        mniSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSubmitOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniSubmitOrder);

        mniReset.setText("Reset");
        mniReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniResetActionPerformed(evt);
            }
        });
        mnuOrder.add(mniReset);

        mnbMain.add(mnuOrder);

        setJMenuBar(mnbMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // exit the application
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSubmitOrderActionPerformed
        submitOrder();
    }//GEN-LAST:event_mniSubmitOrderActionPerformed

    private void mniResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniResetActionPerformed

        reset();
    }//GEN-LAST:event_mniResetActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        int ogWidth = 894;
        int ogHeight = 640;

        int formWidth = this.getWidth();
        int formHeight = this.getHeight();

        // get value of position differential
        int xGradient = ogWidth > formWidth ? ~Math.abs((formWidth - ogWidth) / 2) : Math.abs((formWidth - ogWidth) / 2);
        int yGradient = ogHeight > formHeight ? ~Math.abs((formHeight - ogHeight) / 2) : Math.abs((formHeight - ogHeight) / 2);

        /* make lblTitle position and size relative */
        componentRelativeReposition(lblTitle, xGradient, yGradient, new Limits(0, 0, "", "lower"));

        /* make lblDesc position and size relative */
        componentRelativeReposition(lblDesc, xGradient, yGradient, new Limits(0, 80, "", "lower"));

        /* make lblPhoto position and Size relative */
        componentRelativeReposition(lblPhoto, xGradient, yGradient, new Limits(0, 140, "", "lower"));

        /* make rdoGrass position and size relative */
        componentRelativeReposition(rdoGrass, xGradient, yGradient, new Limits(0, 0, "", ""));

        /* make lblGrass position and size relative */
        componentRelativeReposition(lblGrass, xGradient, yGradient, new Limits(0, 0, "", ""));

        /* make rdoGravel position and size relative */
        componentRelativeReposition(rdoGravel, xGradient, yGradient, new Limits(0, 0, "", ""));

        /* make lblGravel position and size relative */
        componentRelativeReposition(lblGravel, xGradient, yGradient, new Limits(0, 0, "", ""));

        /* make btnNext position and size relative */
        componentRelativeReposition(btnNext, xGradient, yGradient, new Limits(700, 0, "upper", ""));

        /* make btnReset position and size relative */
        componentRelativeReposition(btnReset, xGradient, yGradient, new Limits(700, 0, "upper", ""));
    }//GEN-LAST:event_formComponentResized

    private void rdoGrassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGrassActionPerformed
        if (rdoGrass.isSelected()) {
            // look in directory where class exists, and get location of "grass.jpg"
            URL location = this.getClass().getResource("grass.jpg");

            // create image using the location of "grass.jpg"
            ImageIcon icon = new ImageIcon(location);

            // set the image icon to the label
            lblPhoto.setIcon(icon);
        }
    }//GEN-LAST:event_rdoGrassActionPerformed

    private void rdoGravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGravelActionPerformed
        if (rdoGravel.isSelected()) {
            // find image, create image icon, and set image icon to label
            lblPhoto.setIcon(new ImageIcon(this.getClass().getResource("gravel.jpg")));
        }
    }//GEN-LAST:event_rdoGravelActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // confirm that a selection was made then move to next tab
        if (rdoGrass.isSelected() == false && rdoGravel.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            tabMain.setSelectedIndex(1);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // validate the inputs
        if (validateInputs() == false) {
            return;    // end the method if validation failed
        }

        // create the Customer object and show the information
        Customer cust = createCustomer();
        txaOrderInfo.setText(cust.getDetails());
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed
        submitOrder();
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void lstCustomersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomersValueChanged
        // get selected item’s index number
        int index = lstCustomers.getSelectedIndex();

        // if something was selected, show the object’s details
        if (index > -1) {
            Customer cust = customerList.getElementAt(index);
            txaCustomerInfo.setText(cust.getDetails());
        }

    }//GEN-LAST:event_lstCustomersValueChanged

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        loadCustomers();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            Customer old = lstCustomers.getSelectedValue();

            // if selected, delete and clear textarea
            if (old != null) {
                DataIO data = new DataIO();
                data.delete(old.getName());
                txaCustomerInfo.setText("");
                loadCustomers();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "DataIO Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BraatenLandscapingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BraatenLandscapingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BraatenLandscapingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BraatenLandscapingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BraatenLandscapingGUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgYardType;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCustomerDetails;
    private javax.swing.JLabel lblCustomerListTitle;
    private javax.swing.JLabel lblCutomerList;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblGrass;
    private javax.swing.JLabel lblGravel;
    private javax.swing.JLabel lblInformationTitle;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOrderTitle;
    private javax.swing.JLabel lblPersonal;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSubtitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JLabel lblYardInfo;
    private javax.swing.JList<Customer> lstCustomers;
    private javax.swing.JMenuBar mnbMain;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniReset;
    private javax.swing.JMenuItem mniSubmitOrder;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JPanel pnlCustomerList;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JRadioButton rdoGrass;
    private javax.swing.JRadioButton rdoGravel;
    private javax.swing.JScrollPane scrCustomerListContainer;
    private javax.swing.JScrollPane scrOrderContainer;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTextArea txaCustomerInfo;
    private javax.swing.JTextArea txaOrderInfo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    public class Limits {

        private int x, y;
        private String applyX, applyY;

        public int getX() {
            return x;
        }

        public void setX(int x) {
            this.x = x;
        }

        public int getY() {
            return y;
        }

        public void setY(int y) {
            this.y = y;
        }

        public String getApplyX() {
            return applyX;
        }

        public void setApplyX(String applyX) {
            this.applyX = applyX;
        }

        public String getApplyY() {
            return applyY;
        }

        public void setApplyY(String applyY) {
            this.applyY = applyY;
        }

        public Limits(int x, int y, String applyX, String applyY) {
            this.x = x;
            this.y = y;
            this.applyX = applyX;
            this.applyY = applyY;
        }
    }

    private void reset() {
        tabMain.setSelectedIndex(0);
        // clear the radiobutton selection
        btgYardType.clearSelection();
        // put the image back to "Dirt"
        lblPhoto.setIcon(new ImageIcon(this.getClass().getResource("dirt.jpg")));
        txtName.setText("");
        this.txtName.requestFocusInWindow();
        txtAddress.setText("");
        txtLength.setText("");
        txtWidth.setText("");
        txaOrderInfo.setText("");
    }

    private void componentRelativeReposition(Component comp, int xGradient, int yGradient, Limits limits) {
        int compX = comp.getX();
        int compY = comp.getY();

        int updatedTitleX;
        int updatedTitleY;

        updatedTitleX = switch (limits.getApplyX()) {
            case "lower" ->
                (compX + xGradient) < limits.getX() ? limits.getX() : (compX + xGradient);
            case "higher" ->
                (compX + xGradient) > limits.getX() ? limits.getX() : (compX + xGradient);
            default ->
                compX + xGradient;
        };

        updatedTitleY = switch (limits.getApplyY()) {
            case "lower" ->
                (compY + yGradient) < limits.getY() ? limits.getY() : (compY + yGradient);
            case "higher" ->
                (compY + yGradient) > limits.getY() ? limits.getY() : (compY + yGradient);
            default ->
                compY + yGradient;
        };

        comp.setLocation(updatedTitleX, updatedTitleY);
    }

    private boolean validateInputs() {
        // get inputs from user using the textboxes
        String sName = txtName.getText();
        String sAddress = txtAddress.getText();
        String sWidth = txtWidth.getText();
        String sLength = txtLength.getText();

        // confirm that a radiobutton has been selected
        if (btgYardType.getSelection() == null) {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // make sure we have a name for the order
        if (sName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Name",
                    "Name Error", JOptionPane.ERROR_MESSAGE);
            txtName.requestFocusInWindow();
            return false;
        }

        // make sure we have an address for the order
        if (sAddress.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Address",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sAddress.length() < 6) {
            JOptionPane.showMessageDialog(this, "Address must be six characters or more.",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sWidth.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Width",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.requestFocusInWindow();
            return false;
        }

        // check to see if the width is a valid number
        try {
            Double.parseDouble(sWidth);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Width must be a number",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.setText("");
            txtWidth.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sWidth) <= 0) {
            JOptionPane.showMessageDialog(this, "Width must be greater than 0",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (sLength.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Length",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.requestFocusInWindow();
            return false;
        }

        try {
            Double.parseDouble(sLength);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Length must be a number",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sLength) <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Length must be must be greater than 0",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        // all is good so return true
        return true;
    }

    private Customer createCustomer() {
        String name = txtName.getText();
        String address = txtAddress.getText();
        double width = Double.parseDouble(txtWidth.getText());
        double length = Double.parseDouble(txtLength.getText());
        String yardType = "";
        double totalCost = 0.0;

        if (rdoGrass.isSelected()) {
            yardType = "Grass";
            totalCost = GRASS_PER_SQFT * width * length;
        } else if (rdoGravel.isSelected()) {
            yardType = "Gravel";
            totalCost = GRAVEL_PER_SQFT * width * length;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select a yard type.");
            totalCost = 0.0;
        }

        Customer cust = new Customer(0, name, address, yardType,
                length, width, totalCost);
        return cust;
    }

    private void submitOrder() {
        if (validateInputs() == false) {
            return;    // end the method if validation failed
        }

        Customer cust = createCustomer();
        customerList.addElement(cust);
        txaOrderInfo.setText(cust.getDetails());

        try {
            DataIO data = new DataIO(); // create DataIO object
            data.add(cust);
            loadCustomers();

            // reset for the next customer
            reset();

            //move to the client orders tab
            tabMain.setSelectedIndex(2);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "File IO Error", JOptionPane.ERROR_MESSAGE);
        }

        //move to the client orders tab
        tabMain.setSelectedIndex(2);
    }

    private void loadCustomers() {
        try {
            DataIO data = new DataIO();
            ArrayList<Customer> customers = data.getList();

            // clear DefaultListModel and textarea
            customerList.clear();
            txaOrderInfo.setText("");

            // copy objects from customers to DefaultListModel
            for (int i = 0; i < customers.size(); i++) {
                customerList.addElement(customers.get(i));
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "File IO Error", JOptionPane.ERROR_MESSAGE);
        }
    }

}
